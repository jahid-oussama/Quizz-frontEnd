@import "./nave";
@import "./button";

$content-width: 1000px;
$breakpoint: 799px;
$nav-height: 70px;
$nav-background: rgb(255, 255, 255);
$nav-font-color: #000000;
$link-hover-color: #f8b500;

@import url('https://fonts.googleapis.com/css?family=Poppins&display=swap');

body{
  font-family: 'Poppins'
}

.navigation {
  height: $nav-height;
  background: $nav-background;
}

.nav-container {
  max-width: $content-width;
  margin: 0 auto;
}

%text-non-col-nfc {
  color: $nav-font-color;
  text-decoration: none;
}


.brand {
  position: absolute;
  padding-left: 20px;
  float: left;
  line-height: $nav-height;
  text-transform: uppercase;
  font-size: 1.4em;
  
  

  a,
  a:visited {
      @extend %text-non-col-nfc;
  }
}
%pad-mar0 {
          margin: 0;
          padding: 0;
}

nav {
  float: right;
  ul {
      list-style: none;
      @extend %pad-mar0;
    li {
      float: left;
      position: relative;
      a {
        display: block;
        padding: 10px 20px 0 20px;
        line-height: 50px;
        background: $nav-background;
        @extend %text-non-col-nfc;
        
        
         &::before {
           transition: 300ms;
           height: 5px;
           content: "";
           position: absolute;
           background-color: $link-hover-color;
           width: 0%;
           bottom: 0px;
        }

        &:hover::before{
          width: 70%;
        }
        &:not(:only-child):after {
          padding-left: 4px;
          content: ' â–¾';
        }
      } // Dropdown list
      ul li {
        min-width: 190px;
        a {
          padding: 15px;
          line-height: 20px;
        }
      }
    }
  }
}

%dsp-non-posit-abso {
  display: none;
  position: absolute;
}

.nav-dropdown {
  @extend %dsp-non-posit-abso;
  z-index: 1;
  box-shadow: 0 3px 12px rgba(0, 0, 0, 0.15);
}

.nav-mobile {
  @extend %dsp-non-posit-abso;
  @import url(@mui/icons-material/FormatListBulleted);
  // import FormatListBulletedIcon from '@mui/icons-material/FormatListBulleted';
  top: 0;
  right: 0;
  background: $nav-background;
  height: $nav-height;
  width: $nav-height;
}

@media only screen and (max-width: $breakpoint) {
  .nav-mobile {
    display: block;
  }
  nav {
      width: 100%;
      padding: $nav-height 0 15px;
    ul {
      display: none;
      
      li{
        float: none;
        
        a {
          padding: 15px;
          line-height: 20px;
          
          &:hover::before{
            width: 20%;
          }
        }
        ul li a {
          padding-left: 30px;
        }
      }
    }
  }
  .nav-dropdown {
    position: static;
  }
}

#nav-toggle {
  position: absolute;
  left: 18px;
  top: 22px;
  cursor: pointer;
  padding: 10px 35px 16px 0px;
  span,
  span:before,
  span:after {
    cursor: pointer;
    border-radius: 1px;
    height: 5px;
    width: 35px;
    background: $link-hover-color;
    @extend %dsp-non-posit-abso;
    content: '';
    transition: all 300ms ease-in-out;
  }
  span:before {
    top: -10px;
  }
  span:after {
    bottom: -10px;
  }
  &.active span {
    background-color: transparent;
    &:before,
    &:after {
      top: 0;
    }
    &:before {
      transform: rotate(45deg);
    }
    &:after {
      transform: rotate(-45deg);
    }
  }
}



// Full tutorial coming soon!

.card {
    --card-gradient: rgba(0, 0, 0, 0.8);
    --card-gradient: #06203d, #ccbcc4;
    // --card-gradient: tomato, orange;
    --card-blend-mode: overlay;
    // --card-blend-mode: multiply;
  
    background-color: #fff;
    border-radius: 0.5rem;
    box-shadow: 0.05rem 0.1rem 0.3rem -0.03rem rgba(0, 0, 0, 0.45);
    padding-bottom: 1rem;
    background-image: linear-gradient(
      var(--card-gradient),
      white max(9.5rem, 27vh)
    );
    overflow: hidden;
  
    img {
      border-radius: 0.5rem 0.5rem 0 0;
      width: 100%;
      object-fit: cover;
      // height: max(10rem, 25vh);
      max-height: max(10rem, 30vh);
      aspect-ratio: 4/3;
      mix-blend-mode: var(--card-blend-mode);
      // filter: grayscale(100);
  
      ~ * {
              margin: {
                    left: 1rem;
                    right: 1rem;
              }
      }
    }
  
    > :last-child {
      margin-bottom: 0;
    }
  
    &:hover,
    &:focus-within {
      --card-gradient: #C8C6C6 max(8.5rem, 20vh);
    }
  }
  
  /* Additional demo display styles */
  * {
    box-sizing: border-box;
  }
  
  .body {
    display: grid;
    place-content: center;
    justify-items: center;
    min-height: 81vh;
    margin: 0;
    padding: 1rem;
    line-height: 1.5;
    font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir,
      helvetica neue, helvetica, Ubuntu, roboto, noto, segoe ui, arial, sans-serif;
    color: #444;
   
  }
  
  .card h3 {
    margin-top: 1rem;
    font-size: 1.25rem;
  }
  
  .card a {
    color: inherit;
  }
  
  .card-wrapper {
    list-style: none;
    @extend %pad-mar0;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(30ch, 1fr));
    grid-gap: 1.5rem;
    max-width: 100vw;
    padding: {
              left: 1rem;
              right: 1rem;
    }
  }
  
  
  
  
  
  //"""""""""""""""""""""""""""""""""""""""
  .popup-overlay {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(0, 0, 0, 0.7);
    transition: opacity 500ms;
    visibility: hidden;
    opacity: 0;
  
    &:target {
      visibility: visible;
      opacity: 1;
      z-index: 100;
    }
  }
  
  .popup {
   flex-wrap: wrap;
    background-color: black; color: azure;
    margin: 250px auto;
    padding: 20px;
    border-radius: 5px;
    width: 30%;
    position: relative;
    transition: all 0.5s ease-in-out;
  
    h2 {
      margin-top: 0;
    }
    
    .close {
      position: absolute;
      top: 20px;
      right: 30px;
      transition: all 200ms;
      font: {
            size: 30px;
            weight: bold;
      }
      text-decoration: none;
      color: #333;
      
      &:hover {
        color: #06D85F;
      }
    }
    
    
  }

  

// Demo Styles
// ====================================
@import url(https://fonts.googleapis.com/css?family=Open+Sans:300);
// html,body {height: 100%;}body{display: flex;flex-direction:column;align-items: center;justify-content:center;width:100%;}html{background:#193441;}


// Placeholder Mixin
// ====================================

$pseudo-placeholder: "::-webkit-input-placeholder" "::-moz-placeholder" ":-ms-input-placeholder" "::placeholder";

@mixin placeholder {
  @each $pseudo in $pseudo-placeholder {
    @at-root #{&}#{$pseudo} {
      @content
    }
  }
}


// Theme Config
// ====================================

$slabel-theme: (
  border: 0,
  radius: 4px,
  padding: 10px 15px,
  font: 'Open Sans',
  bg: #d7d2d2,
  label-bg: #d7d2d2,
  label-color: inherit,
  error-color: #E82C0C,
  placeholder-color: #ffffff,
  success-color: #ffffff
);

@function slabel($key) {
  @return map-get($slabel-theme, $key);
}


// Required Styles
// ====================================

.slabel {
  margin-top: 40px;
  display: inline-block;
  max-width: 240px;
  position: relative;
  width: 100%;
  font-family: slabel(font);
}

.slabel input {
  appearance: none;
  border: slabel(border);
  border-radius: slabel(radius) - 1;
  box-sizing: border-box;
  display: inline-block;
  outline: 0;
  padding: slabel(padding);
  transition: transform 225ms ease-in-out;
  width: 100%;
  background: slabel(bg);

  &:empty:valid + label {
    color: slabel(success-color) !important;
  }

  &:valid + label {
    color: slabel(success-color) !important;
  }

  &:invalid {
    background: slabel(error-color);
    color: white;
  }

  &:invalid + label {
    &:after { background: slabel(error-color); }
    color: white;
  }

  @include placeholder { color: slabel(placeholder-color); }

  + label {
    border: slabel(border);
    border-radius: slabel(radius);
    box-sizing: border-box;
    cursor: pointer;
    display: flex;
    align-items: center;
    overflow: hidden;
    padding: slabel(padding);
    position: absolute;
    top: 0;
    left: 0;
    transform: translateY(0);
    transition: transform 225ms ease-in-out;
    width: 100%;
    color: slabel(label-color);

    &:before,
    &:after {
      content: "";
      position: absolute;
      right: 0;
      left: 0;
      z-index: -1;
      transition: transform 225ms ease-in-out;
    }

    &:before { transform: translateY(-100%); }

    &:after {
      border-radius: slabel(radius);
      top: 0;
      bottom: 0;
      background: slabel(label-bg);
    }
  }
}

.slabel input:focus {
  &:empty:valid + label {
    color: slabel(success-color) !important;
  }

  &:invalid + label {
    color: slabel(error-color);
  }

  + label {
    border: slabel(border);
    transform: translateY(-100%);

    &:after {
      transform: translateY(100%);
    }
  }
}


